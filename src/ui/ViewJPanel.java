/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Employee.Employee;
import model.Employee.EmployeeRecord;


/**
 *
 * @author: Aashay Pawar
 * @NUID: 002134382
 * @NUEMAIL: pawar.aa@northeastern.edu
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    
    EmployeeRecord record;
    private String xFilePath;
    
    
    public ViewJPanel(EmployeeRecord record) {
        initComponents();
        
        this.record = record;
        
        PopulateTable();
        
        chUpdateGender.add("");
        chUpdateGender.add("Male");
        chUpdateGender.add("Female");
        chUpdateGender.add("NA");
        
        chUpdateDate.add("");
        for (int i = 1; i < 10; i++) {
            chUpdateDate.add("0" + String.valueOf(i));
        }
        for (int i = 10; i < 32; i++) {
            chUpdateDate.add(String.valueOf(i));
        }
        
        String[] months = {"","JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"};
        for (int i = 0; i < 13; i++) {
            chUpdateMonth.add(months[i]);
        }
        
        chUpdateYear.add("");
        for (int i = 2022; i > 1980; i--) {
            chUpdateYear.add(String.valueOf(i));
        }
        
        btnUpdateSave.setEnabled(false);
        txtUpdateId.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblRecords = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtUpdateName = new javax.swing.JTextField();
        txtUpdatePhone = new javax.swing.JTextField();
        btnUpdateSave = new javax.swing.JButton();
        btnUpdatePhoto = new javax.swing.JButton();
        lblId = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblStartDate = new javax.swing.JLabel();
        lblLevel = new javax.swing.JLabel();
        lblTeam = new javax.swing.JLabel();
        lblPosition = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblPhone = new javax.swing.JLabel();
        lblPhoto = new javax.swing.JLabel();
        txtUpdateId = new javax.swing.JTextField();
        chUpdateGender = new java.awt.Choice();
        chUpdateDate = new java.awt.Choice();
        chUpdateMonth = new java.awt.Choice();
        chUpdateYear = new java.awt.Choice();
        txtUpdateTeam = new javax.swing.JTextField();
        txtUpdateLevel = new javax.swing.JTextField();
        txtUpdatePosition = new javax.swing.JTextField();
        txtUpdateAge = new javax.swing.JTextField();
        txtUpdateEmail = new javax.swing.JTextField();

        tblRecords.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Age", "Gender", "Start", "Level", "Team Info", "Position", "Email", "Phone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRecords);

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete Record");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtUpdatePhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUpdatePhoneActionPerformed(evt);
            }
        });

        btnUpdateSave.setText("Save");
        btnUpdateSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateSaveActionPerformed(evt);
            }
        });

        btnUpdatePhoto.setText("Select a File (.JPG, .PNG)");
        btnUpdatePhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePhotoActionPerformed(evt);
            }
        });

        lblId.setText("Employee ID:");

        lblName.setText("Full Name:");

        lblAge.setText("Age:");

        lblGender.setText("Gender:");

        lblStartDate.setText("Start Date:");

        lblLevel.setText("Level:");

        lblTeam.setText("Team Info:");

        lblPosition.setText("Position Title:");

        lblEmail.setText("Email:");

        lblPhone.setText("Phone:");

        lblPhoto.setText("Photo:");

        txtUpdateTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUpdateTeamActionPerformed(evt);
            }
        });

        txtUpdateLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUpdateLevelActionPerformed(evt);
            }
        });

        txtUpdatePosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUpdatePositionActionPerformed(evt);
            }
        });

        txtUpdateAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUpdateAgeActionPerformed(evt);
            }
        });

        txtUpdateEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUpdateEmailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 834, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblId)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPosition, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblGender, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblStartDate, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblLevel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTeam, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblEmail, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblPhoto)
                                .addComponent(lblPhone))
                            .addComponent(lblAge, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUpdateSave)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtUpdateId)
                            .addComponent(txtUpdateAge, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUpdatePhone, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUpdateName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chUpdateGender, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(chUpdateDate, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(chUpdateMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(chUpdateYear, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtUpdateTeam, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUpdateLevel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUpdatePosition, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUpdateEmail, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnUpdatePhoto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(50, 463, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete)
                        .addGap(143, 143, 143))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnUpdate)
                        .addComponent(btnDelete))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblId)
                            .addComponent(txtUpdateId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUpdateName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUpdateAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAge))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chUpdateGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGender))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblStartDate)
                            .addComponent(chUpdateDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chUpdateMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chUpdateYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLevel)
                            .addComponent(txtUpdateLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUpdateTeam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTeam))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUpdatePosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPosition))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUpdateEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmail))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUpdatePhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPhone))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPhoto)
                            .addComponent(btnUpdatePhoto))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdateSave)
                .addContainerGap(40, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblRecords.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Select a row to delete");
            return;
        }
      
        record.deleteRecord(selectedRowIndex);
        
        PopulateTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblRecords.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Select a row to update");
            return;
        }

        btnDelete.setEnabled(false);
        btnUpdate.setEnabled(false);
        btnUpdateSave.setEnabled(true);
        
        String employeeId = record.getRecord().get(selectedRowIndex).getEmployeeId();
        String employeeName = record.getRecord().get(selectedRowIndex).getName();
        String age = record.getRecord().get(selectedRowIndex).getAge();
        String gender = record.getRecord().get(selectedRowIndex).getGender();
        String startDate = record.getRecord().get(selectedRowIndex).getStartDate();
        String level = record.getRecord().get(selectedRowIndex).getLevel();
        String team = record.getRecord().get(selectedRowIndex).getTeam();
        String position = record.getRecord().get(selectedRowIndex).getPosition();
        String email = record.getRecord().get(selectedRowIndex).getEmail();
        String phone = record.getRecord().get(selectedRowIndex).getPhone();
        String photo = record.getRecord().get(selectedRowIndex).getPhotoFilePath();
        xFilePath = photo;
        
        
        txtUpdateId.setText(employeeId);
        txtUpdateName.setText(employeeName);
        txtUpdateAge.setText(age);
        chUpdateGender.select(gender);
        chUpdateDate.select(startDate.substring(0, 2));
        chUpdateMonth.select(startDate.substring(3, 6));
        chUpdateYear.select(startDate.substring(7, 11));       
        txtUpdateLevel.setText(level);
        txtUpdateTeam.setText(team);
        txtUpdatePosition.setText(position);
        txtUpdateEmail.setText(email);
        txtUpdatePhone.setText(phone);
        
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtUpdatePhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUpdatePhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUpdatePhoneActionPerformed

    private void btnUpdateSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateSaveActionPerformed
        // TODO add your handling code here:
 
        String id = txtUpdateId.getText();
        String name = txtUpdateName.getText();
        String age = txtUpdateAge.getText();
        String gender = chUpdateGender.getSelectedItem();
        String startDate = chUpdateDate.getSelectedItem() + " " + chUpdateMonth.getSelectedItem() + " " + chUpdateYear.getSelectedItem();
        String level = txtUpdateLevel.getText();
        String team = txtUpdateTeam.getText();
        String position = txtUpdatePosition.getText();
        String email = txtUpdateEmail.getText();
        String phone = txtUpdatePhone.getText();
        String photoFilePath = xFilePath;
        
        if(!age.matches("[0-9]+") || !phone.matches("[0-9]+") || !isValid(email)){
            if(!age.matches("[0-9]+"))
                JOptionPane.showMessageDialog(this,"Age should be a number!");
            if(!phone.matches("[0-9]+"))
                JOptionPane.showMessageDialog(this,"Phone must have digits only!");
            if(!isValid(email))
                JOptionPane.showMessageDialog(this,"Email Invalid!");
            return;
        }
        
        if(name.length()*age.length()*gender.length()*startDate.length()*level.length()*team.length()*position.length()*email.length()*phone.length() == 0 ){
            JOptionPane.showMessageDialog(this,"One or more fields missing!");
            return;
        }
        
        int selectedRowIndex = tblRecords.getSelectedRow();

        Employee e = new Employee();

        e.setEmployeeId(id);
        e.setName(name);
        e.setAge(age);
        e.setGender(gender);
        e.setStartDate(startDate);
        e.setLevel(level);
        e.setTeam(team);
        e.setPosition(position);
        e.setEmail(email);
        e.setPhone(phone);
        e.setPhotoFilePath(photoFilePath);
        
        record.updateRecord(selectedRowIndex, e);

        JOptionPane.showMessageDialog(this,"Fields Updates!");

        txtUpdateId.setText("");
        txtUpdateName.setText("");
        txtUpdateAge.setText("");
        chUpdateGender.select(0);
        chUpdateDate.select(0);
        chUpdateMonth.select(0);
        chUpdateYear.select(0);
        txtUpdateLevel.setText("");
        txtUpdateTeam.setText("");
        txtUpdatePosition.setText("");
        txtUpdateEmail.setText("");
        txtUpdatePhone.setText("");
        
        
        
        PopulateTable();
        btnUpdateSave.setEnabled(false);
        btnDelete.setEnabled(true);
        btnUpdate.setEnabled(true);

    }//GEN-LAST:event_btnUpdateSaveActionPerformed

    private void txtUpdateTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUpdateTeamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUpdateTeamActionPerformed

    private void txtUpdateLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUpdateLevelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUpdateLevelActionPerformed

    private void txtUpdatePositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUpdatePositionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUpdatePositionActionPerformed

    private void txtUpdateAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUpdateAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUpdateAgeActionPerformed

    private void txtUpdateEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUpdateEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUpdateEmailActionPerformed

    private void btnUpdatePhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePhotoActionPerformed
        // TODO add your handling code here:
        JFileChooser file = new JFileChooser();
        file.setMultiSelectionEnabled(true);
        file.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        file.setFileHidingEnabled(false);
        if (file.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
           java.io.File f = file.getSelectedFile();
           xFilePath = f.getPath();
    }//GEN-LAST:event_btnUpdatePhotoActionPerformed

}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdatePhoto;
    private javax.swing.JButton btnUpdateSave;
    private java.awt.Choice chUpdateDate;
    private java.awt.Choice chUpdateGender;
    private java.awt.Choice chUpdateMonth;
    private java.awt.Choice chUpdateYear;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblLevel;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JLabel lblPosition;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JLabel lblTeam;
    private javax.swing.JTable tblRecords;
    private javax.swing.JTextField txtUpdateAge;
    private javax.swing.JTextField txtUpdateEmail;
    private javax.swing.JTextField txtUpdateId;
    private javax.swing.JTextField txtUpdateLevel;
    private javax.swing.JTextField txtUpdateName;
    private javax.swing.JTextField txtUpdatePhone;
    private javax.swing.JTextField txtUpdatePosition;
    private javax.swing.JTextField txtUpdateTeam;
    // End of variables declaration//GEN-END:variables

    private void PopulateTable() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        DefaultTableModel model = (DefaultTableModel) tblRecords.getModel();
        model.setRowCount(0);
        
        for(Employee e: record.getRecord()){
            Object[] row = new Object[10];
            row[0] = e.getEmployeeId();
            row[1] = e.getName();
            row[2] = e.getAge();
            row[3] = e.getGender();
            row[4] = e.getStartDate();
            row[5] = e.getLevel();
            row[6] = e.getTeam();
            row[7] = e.getPosition();
            row[8] = e.getEmail();
            row[9] = e.getPhone();
            
            model.addRow(row);
        }
        
    }
    
    public static boolean isValid(String email)
    {
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\."+
                            "[a-zA-Z0-9_+&*-]+)*@" +
                            "(?:[a-zA-Z0-9-]+\\.)+[a-z" +
                            "A-Z]{2,7}$";
                              
        Pattern pat = Pattern.compile(emailRegex);
        if (email == null)
            return false;
        return pat.matcher(email).matches();
    }
}



/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Objects;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.table.DefaultTableModel;
import model.Employee.Employee;
import model.Employee.EmployeeRecord;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Aashay
 */
public class ProfileJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProfileJPanel
     */
    
    EmployeeRecord record;
    
    public ProfileJPanel(EmployeeRecord record) {
        initComponents();
        
        this.record = record;
        
        PopulateTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblRecords = new javax.swing.JTable();
        btnShowProfile = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        tblRecords.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Age", "Gender", "Start", "Level", "Team Info", "Position", "Email", "Phone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRecords);

        btnShowProfile.setText("Show Profile");
        btnShowProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowProfileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(437, 437, 437)
                        .addComponent(btnShowProfile))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(475, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1002, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(276, 276, 276)
                .addComponent(btnShowProfile)
                .addGap(2, 2, 2)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(37, 37, 37)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(369, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnShowProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowProfileActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblRecords.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Select a row to update");
            return;
        }
        
        String employeeId = record.getRecord().get(selectedRowIndex).getEmployeeId();
        String employeeName = record.getRecord().get(selectedRowIndex).getName();
        String age = record.getRecord().get(selectedRowIndex).getAge();
        String gender = record.getRecord().get(selectedRowIndex).getGender();
        String startDate = record.getRecord().get(selectedRowIndex).getStartDate();
        String level = record.getRecord().get(selectedRowIndex).getLevel();
        String team = record.getRecord().get(selectedRowIndex).getTeam();
        String position = record.getRecord().get(selectedRowIndex).getPosition();
        String email = record.getRecord().get(selectedRowIndex).getEmail();
        String phone = record.getRecord().get(selectedRowIndex).getPhone();
        String photo = record.getRecord().get(selectedRowIndex).getPhotoFilePath();
        /*
        txtUpdateId.setText(employeeId);
        txtUpdateName.setText(employeeName);
        txtUpdateAge.setText(age);
        chUpdateGender.select(gender);
        chUpdateDate.select(startDate.substring(0, 2));
        chUpdateMonth.select(startDate.substring(3, 6));
        chUpdateYear.select(startDate.substring(7, 11));       
        txtUpdateLevel.setText(level);
        txtUpdateTeam.setText(team);
        txtUpdatePosition.setText(position);
        txtUpdateEmail.setText(email);
        txtUpdatePhone.setText(phone);
*/
        
        BufferedImage img = null;
        try{
            img = ImageIO.read(new File(photo));
        } catch (IOException e){
        }
        
        jLabel1.setIcon(new ImageIcon(img));
    }//GEN-LAST:event_btnShowProfileActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnShowProfile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRecords;
    // End of variables declaration//GEN-END:variables

    private void PopulateTable() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        DefaultTableModel model = (DefaultTableModel) tblRecords.getModel();
        model.setRowCount(0);
        
        for(Employee e: record.getRecord()){
            Object[] row = new Object[10];
            row[0] = e.getEmployeeId();
            row[1] = e.getName();
            row[2] = e.getAge();
            row[3] = e.getGender();
            row[4] = e.getStartDate();
            row[5] = e.getLevel();
            row[6] = e.getTeam();
            row[7] = e.getPosition();
            row[8] = e.getEmail();
            row[9] = e.getPhone();
            
            model.addRow(row);
        }
        
    }
}

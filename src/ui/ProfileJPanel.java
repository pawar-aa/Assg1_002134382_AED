/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.table.DefaultTableModel;
import model.Employee.Employee;
import model.Employee.EmployeeRecord;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author: Aashay Pawar
 * @NUID: 002134382
 * @NUEMAIL: pawar.aa@northeastern.edu
 */
public class ProfileJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProfileJPanel
     */
    
    EmployeeRecord record;
    EmployeeRecord er;
    Boolean alpha;

    @SuppressWarnings("empty-statement")
    public ProfileJPanel(EmployeeRecord record) {
        initComponents();
        
        this.record = record;
        alpha = false;
        
        
        PopulateTable();
        
        String[] attributes = {"Id", "Name", "Age", "Gender", "Start Date", "Level", "Team", "Position", "Email", "Phone" };
        chAttribute.add("");
        for(int i=0;i<10;i++){
            chAttribute.add(attributes[i]);  
        }
        
        txtId.setEnabled(false);
        txtName.setEnabled(false);
        txtAge.setEnabled(false);
        txtGender.setEnabled(false);
        txtStartDate.setEnabled(false);
        txtLevel.setEnabled(false);
        txtTeam.setEnabled(false);
        txtPosition.setEnabled(false);
        txtEmail.setEnabled(false);
        txtPhone.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblRecords = new javax.swing.JTable();
        btnShowProfile = new javax.swing.JButton();
        lblPhoto = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtGender = new javax.swing.JTextField();
        txtStartDate = new javax.swing.JTextField();
        txtLevel = new javax.swing.JTextField();
        txtTeam = new javax.swing.JTextField();
        txtPosition = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblStartDate = new javax.swing.JLabel();
        lblLevel = new javax.swing.JLabel();
        lblTeam = new javax.swing.JLabel();
        lblPosition = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblPhone = new javax.swing.JLabel();
        chAttribute = new java.awt.Choice();
        txtQuery = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnViewAll = new javax.swing.JButton();
        lblSearch = new javax.swing.JLabel();

        tblRecords.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Age", "Gender", "Start", "Level", "Team Info", "Position", "Email", "Phone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRecords);

        btnShowProfile.setText("Show Profile");
        btnShowProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowProfileActionPerformed(evt);
            }
        });

        lblPhoto.setBackground(new java.awt.Color(255, 255, 255));

        lblId.setText("Employee Id:");

        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });

        txtTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTeamActionPerformed(evt);
            }
        });

        txtPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPositionActionPerformed(evt);
            }
        });

        lblName.setText("Name:");

        lblAge.setText("Age:");

        lblGender.setText("Gender:");

        lblStartDate.setText("Start Date:");

        lblLevel.setText("Level:");

        lblTeam.setText("Team:");

        lblPosition.setText("Position:");

        lblEmail.setText("Email:");

        lblPhone.setText("Phone:");

        txtQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQueryActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnViewAll.setText("View All");
        btnViewAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAllActionPerformed(evt);
            }
        });

        lblSearch.setText("Search:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1002, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(lblPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblId)
                            .addComponent(lblName)
                            .addComponent(lblAge)
                            .addComponent(lblGender)
                            .addComponent(lblStartDate))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnShowProfile)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtId)
                                    .addComponent(txtName)
                                    .addComponent(txtAge)
                                    .addComponent(txtGender)
                                    .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(lblPhone))
                                    .addComponent(lblEmail, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblPosition, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblTeam, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblLevel, javax.swing.GroupLayout.Alignment.TRAILING))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtLevel)
                                    .addComponent(txtTeam)
                                    .addComponent(txtPosition)
                                    .addComponent(txtEmail)
                                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblSearch)
                .addGap(27, 27, 27)
                .addComponent(chAttribute, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnViewAll)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtQuery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSearch)
                        .addComponent(btnViewAll))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblSearch)
                        .addComponent(chAttribute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(btnShowProfile)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblId)
                                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblName))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblAge))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblGender))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblStartDate)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblLevel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtTeam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTeam))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPosition))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblEmail))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPhone)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(lblPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(100, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnShowProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowProfileActionPerformed
        // TODO add your handling code here:
        

        int selectedRowIndex = tblRecords.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Select a row to View");
            return;
        }
        
        EmployeeRecord temp;
        if(!alpha){
            temp = record;
        } else {
            temp = er;
        }

        int actualIndex = selectedRowIndex;

        String employeeId = temp.getRecord().get(actualIndex).getEmployeeId();
        String employeeName = temp.getRecord().get(actualIndex).getName();
        String age = temp.getRecord().get(actualIndex).getAge();
        String gender = temp.getRecord().get(actualIndex).getGender();
        String startDate = temp.getRecord().get(actualIndex).getStartDate();
        String level = temp.getRecord().get(actualIndex).getLevel();
        String team = temp.getRecord().get(actualIndex).getTeam();
        String position = temp.getRecord().get(actualIndex).getPosition();
        String email = temp.getRecord().get(actualIndex).getEmail();
        String phone = temp.getRecord().get(actualIndex).getPhone();
        String photo = temp.getRecord().get(actualIndex).getPhotoFilePath();
        
        txtId.setText(employeeId);
        txtName.setText(employeeName);
        txtAge.setText(age);
        txtGender.setText(gender);
        txtStartDate.setText(startDate);     
        txtLevel.setText(level);
        txtTeam.setText(team);
        txtPosition.setText(position);
        txtEmail.setText(email);
        txtPhone.setText(phone);

        
        BufferedImage img = null;
        try{
            img = ImageIO.read(new File(photo));
        } catch (IOException e){
        }
        
        lblPhoto.setIcon(new ImageIcon(img));

    }//GEN-LAST:event_btnShowProfileActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        alpha = true;
        int attribute = chAttribute.getSelectedIndex();
        String query = txtQuery.getText();
        int numberOfRecords = record.getRecord().size();
        
        er = new EmployeeRecord();
        
        if(attribute == 1){
            for(int i=0;i<numberOfRecords;i++){
                if(query.matches(record.getRecord().get(i).getEmployeeId())){
                    Employee ek = er.addNewRecord();
                    ek.setEmployeeId(record.getRecord().get(i).getEmployeeId());
                    ek.setName(record.getRecord().get(i).getName());
                    ek.setAge(record.getRecord().get(i).getAge());
                    ek.setGender(record.getRecord().get(i).getGender());
                    ek.setStartDate(record.getRecord().get(i).getStartDate());
                    ek.setLevel(record.getRecord().get(i).getLevel());
                    ek.setTeam(record.getRecord().get(i).getTeam());
                    ek.setPosition(record.getRecord().get(i).getPosition());
                    ek.setEmail(record.getRecord().get(i).getEmail());
                    ek.setPhone(record.getRecord().get(i).getPhone());  
                    ek.setPhotoFilePath(record.getRecord().get(i).getPhotoFilePath()); 
      
                }
            }
        }
        
        if(attribute == 2){
            for(int i=0;i<numberOfRecords;i++){
                if(query.matches(record.getRecord().get(i).getName())){
                    Employee ek = er.addNewRecord();
                    ek.setEmployeeId(record.getRecord().get(i).getEmployeeId());
                    ek.setName(record.getRecord().get(i).getName());
                    ek.setAge(record.getRecord().get(i).getAge());
                    ek.setGender(record.getRecord().get(i).getGender());
                    ek.setStartDate(record.getRecord().get(i).getStartDate());
                    ek.setLevel(record.getRecord().get(i).getLevel());
                    ek.setTeam(record.getRecord().get(i).getTeam());
                    ek.setPosition(record.getRecord().get(i).getPosition());
                    ek.setEmail(record.getRecord().get(i).getEmail());
                    ek.setPhone(record.getRecord().get(i).getPhone()); 
                    ek.setPhotoFilePath(record.getRecord().get(i).getPhotoFilePath()); 
                }
            }
        }
        
        if(attribute == 3){
            for(int i=0;i<numberOfRecords;i++){
                if(query.matches(record.getRecord().get(i).getAge())){
                    Employee ek = er.addNewRecord();
                    ek.setEmployeeId(record.getRecord().get(i).getEmployeeId());
                    ek.setName(record.getRecord().get(i).getName());
                    ek.setAge(record.getRecord().get(i).getAge());
                    ek.setGender(record.getRecord().get(i).getGender());
                    ek.setStartDate(record.getRecord().get(i).getStartDate());
                    ek.setLevel(record.getRecord().get(i).getLevel());
                    ek.setTeam(record.getRecord().get(i).getTeam());
                    ek.setPosition(record.getRecord().get(i).getPosition());
                    ek.setEmail(record.getRecord().get(i).getEmail());
                    ek.setPhone(record.getRecord().get(i).getPhone());  
                    ek.setPhotoFilePath(record.getRecord().get(i).getPhotoFilePath()); 
                }
            }
        }
        
        if(attribute == 4){
            for(int i=0;i<numberOfRecords;i++){
                if(query.matches(record.getRecord().get(i).getGender())){
                    Employee ek = er.addNewRecord();
                    ek.setEmployeeId(record.getRecord().get(i).getEmployeeId());
                    ek.setName(record.getRecord().get(i).getName());
                    ek.setAge(record.getRecord().get(i).getAge());
                    ek.setGender(record.getRecord().get(i).getGender());
                    ek.setStartDate(record.getRecord().get(i).getStartDate());
                    ek.setLevel(record.getRecord().get(i).getLevel());
                    ek.setTeam(record.getRecord().get(i).getTeam());
                    ek.setPosition(record.getRecord().get(i).getPosition());
                    ek.setEmail(record.getRecord().get(i).getEmail());
                    ek.setPhone(record.getRecord().get(i).getPhone());  
                    ek.setPhotoFilePath(record.getRecord().get(i).getPhotoFilePath()); 
                }
            }
        }
        
        if(attribute == 5){
            for(int i=0;i<numberOfRecords;i++){
                if(query.matches(record.getRecord().get(i).getStartDate())){
                    Employee ek = er.addNewRecord();
                    ek.setEmployeeId(record.getRecord().get(i).getEmployeeId());
                    ek.setName(record.getRecord().get(i).getName());
                    ek.setAge(record.getRecord().get(i).getAge());
                    ek.setGender(record.getRecord().get(i).getGender());
                    ek.setStartDate(record.getRecord().get(i).getStartDate());
                    ek.setLevel(record.getRecord().get(i).getLevel());
                    ek.setTeam(record.getRecord().get(i).getTeam());
                    ek.setPosition(record.getRecord().get(i).getPosition());
                    ek.setEmail(record.getRecord().get(i).getEmail());
                    ek.setPhone(record.getRecord().get(i).getPhone());  
                    ek.setPhotoFilePath(record.getRecord().get(i).getPhotoFilePath()); 
                }
            }
        }
        
        if(attribute == 6){
            for(int i=0;i<numberOfRecords;i++){
                if(query.matches(record.getRecord().get(i).getLevel())){
                    Employee ek = er.addNewRecord();
                    ek.setEmployeeId(record.getRecord().get(i).getEmployeeId());
                    ek.setName(record.getRecord().get(i).getName());
                    ek.setAge(record.getRecord().get(i).getAge());
                    ek.setGender(record.getRecord().get(i).getGender());
                    ek.setStartDate(record.getRecord().get(i).getStartDate());
                    ek.setLevel(record.getRecord().get(i).getLevel());
                    ek.setTeam(record.getRecord().get(i).getTeam());
                    ek.setPosition(record.getRecord().get(i).getPosition());
                    ek.setEmail(record.getRecord().get(i).getEmail());
                    ek.setPhone(record.getRecord().get(i).getPhone());  
                    ek.setPhotoFilePath(record.getRecord().get(i).getPhotoFilePath()); 
                }
            }
        }
        
        if(attribute == 7){
            for(int i=0;i<numberOfRecords;i++){
                if(query.matches(record.getRecord().get(i).getTeam())){
                    Employee ek = er.addNewRecord();
                    ek.setEmployeeId(record.getRecord().get(i).getEmployeeId());
                    ek.setName(record.getRecord().get(i).getName());
                    ek.setAge(record.getRecord().get(i).getAge());
                    ek.setGender(record.getRecord().get(i).getGender());
                    ek.setStartDate(record.getRecord().get(i).getStartDate());
                    ek.setLevel(record.getRecord().get(i).getLevel());
                    ek.setTeam(record.getRecord().get(i).getTeam());
                    ek.setPosition(record.getRecord().get(i).getPosition());
                    ek.setEmail(record.getRecord().get(i).getEmail());
                    ek.setPhone(record.getRecord().get(i).getPhone());  
                    ek.setPhotoFilePath(record.getRecord().get(i).getPhotoFilePath()); 
                }
            }
        }
        
        if(attribute == 8){
            for(int i=0;i<numberOfRecords;i++){
                if(query.matches(record.getRecord().get(i).getPosition())){
                    Employee ek = er.addNewRecord();
                    ek.setEmployeeId(record.getRecord().get(i).getEmployeeId());
                    ek.setName(record.getRecord().get(i).getName());
                    ek.setAge(record.getRecord().get(i).getAge());
                    ek.setGender(record.getRecord().get(i).getGender());
                    ek.setStartDate(record.getRecord().get(i).getStartDate());
                    ek.setLevel(record.getRecord().get(i).getLevel());
                    ek.setTeam(record.getRecord().get(i).getTeam());
                    ek.setPosition(record.getRecord().get(i).getPosition());
                    ek.setEmail(record.getRecord().get(i).getEmail());
                    ek.setPhone(record.getRecord().get(i).getPhone());  
                    ek.setPhotoFilePath(record.getRecord().get(i).getPhotoFilePath()); 
                }
            }
        }
        
        if(attribute == 9){
            for(int i=0;i<numberOfRecords;i++){
                if(query.matches(record.getRecord().get(i).getEmail())){
                    Employee ek = er.addNewRecord();
                    ek.setEmployeeId(record.getRecord().get(i).getEmployeeId());
                    ek.setName(record.getRecord().get(i).getName());
                    ek.setAge(record.getRecord().get(i).getAge());
                    ek.setGender(record.getRecord().get(i).getGender());
                    ek.setStartDate(record.getRecord().get(i).getStartDate());
                    ek.setLevel(record.getRecord().get(i).getLevel());
                    ek.setTeam(record.getRecord().get(i).getTeam());
                    ek.setPosition(record.getRecord().get(i).getPosition());
                    ek.setEmail(record.getRecord().get(i).getEmail());
                    ek.setPhone(record.getRecord().get(i).getPhone());  
                    ek.setPhotoFilePath(record.getRecord().get(i).getPhotoFilePath()); 
                }
            }
        }
        
        if(attribute == 10){
            for(int i=0;i<numberOfRecords;i++){
                if(query.matches(record.getRecord().get(i).getPhone())){
                    Employee ek = er.addNewRecord();
                    ek.setEmployeeId(record.getRecord().get(i).getEmployeeId());
                    ek.setName(record.getRecord().get(i).getName());
                    ek.setAge(record.getRecord().get(i).getAge());
                    ek.setGender(record.getRecord().get(i).getGender());
                    ek.setStartDate(record.getRecord().get(i).getStartDate());
                    ek.setLevel(record.getRecord().get(i).getLevel());
                    ek.setTeam(record.getRecord().get(i).getTeam());
                    ek.setPosition(record.getRecord().get(i).getPosition());
                    ek.setEmail(record.getRecord().get(i).getEmail());
                    ek.setPhone(record.getRecord().get(i).getPhone());  
                    ek.setPhotoFilePath(record.getRecord().get(i).getPhotoFilePath()); 
                }
            }
        }

        DefaultTableModel model = (DefaultTableModel) tblRecords.getModel();
        model.setRowCount(0);
        
        for(Employee e: er.getRecord()){
            Object[] row = new Object[10];
            row[0] = e.getEmployeeId();
            row[1] = e.getName();
            row[2] = e.getAge();
            row[3] = e.getGender();
            row[4] = e.getStartDate();
            row[5] = e.getLevel();
            row[6] = e.getTeam();
            row[7] = e.getPosition();
            row[8] = e.getEmail();
            row[9] = e.getPhone();
            
            model.addRow(row);
        }
        
        chAttribute.select(0);
        txtQuery.setText("");

    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQueryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQueryActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void txtTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTeamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTeamActionPerformed

    private void txtPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPositionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPositionActionPerformed

    private void btnViewAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAllActionPerformed
        // TODO add your handling code here:
        alpha = false;
        PopulateTable();
        txtQuery.setText("");
        chAttribute.select(0);
        
        txtId.setText("");
        txtName.setText("");
        txtAge.setText("");
        txtGender.setText("");
        txtStartDate.setText("");     
        txtLevel.setText("");
        txtTeam.setText("");
        txtPosition.setText("");
        txtEmail.setText("");
        txtPhone.setText("");
        
        lblPhoto.setIcon(null);

    }//GEN-LAST:event_btnViewAllActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnShowProfile;
    private javax.swing.JButton btnViewAll;
    private java.awt.Choice chAttribute;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblLevel;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JLabel lblPosition;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JLabel lblTeam;
    private javax.swing.JTable tblRecords;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtLevel;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPosition;
    private javax.swing.JTextField txtQuery;
    private javax.swing.JTextField txtStartDate;
    private javax.swing.JTextField txtTeam;
    // End of variables declaration//GEN-END:variables

    private void PopulateTable() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        DefaultTableModel model = (DefaultTableModel) tblRecords.getModel();
        model.setRowCount(0);
        
        for(Employee e: record.getRecord()){
            Object[] row = new Object[10];
            row[0] = e.getEmployeeId();
            row[1] = e.getName();
            row[2] = e.getAge();
            row[3] = e.getGender();
            row[4] = e.getStartDate();
            row[5] = e.getLevel();
            row[6] = e.getTeam();
            row[7] = e.getPosition();
            row[8] = e.getEmail();
            row[9] = e.getPhone();
            
            model.addRow(row);
        }
        
    }
}
